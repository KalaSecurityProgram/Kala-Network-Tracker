name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up Python
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          pip install pyinstaller requests psutil beautifulsoup4

      # Step 4: Build for Linux
      - name: Build .deb Package (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          pyinstaller --onefile --console Tracker.py
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm
          fpm -s dir -t deb -n kala-network-tracker -v 1.0 --description "Kala Network Tracker Tool" dist/Tracker=/usr/bin/kala-tracker

      # Step 5: Build for Windows
      - name: Build .exe Package (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pyinstaller --onefile --console Tracker.py

      # Step 6: Build for macOS
      - name: Build Binary (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          pyinstaller --onefile --console Tracker.py

      # Step 7: Debug Dist Directory
      - name: Debug Dist Directory
        run: |
          echo "Contents of dist/ directory:"
          ls -R dist || echo "dist/ not found"

      # Step 8: Upload Artifacts
      - name: Upload Executables
        uses: actions/upload-artifact@v3
        with:
          name: Tracker-${{ matrix.os }}
          path: |
            dist/Tracker*
            kala-network-tracker_*.deb
